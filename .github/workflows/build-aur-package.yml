name: Build AUR Package

on:
  workflow_call:
    inputs:
      package_name:
        description: 'Name of the AUR package to build'
        required: true
        type: string
      dependencies:
        description: 'Comma-separated list of package dependency names (without -package suffix)'
        required: false
        type: string
        default: ''

jobs:
  build-package:
    runs-on: ubuntu-latest
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: Update pacman
        run: pacman -Syu --noconfirm

      - name: Install dependencies
        run: pacman -S git base-devel devtools --noconfirm

      - name: Add build user
        run: useradd -m build

      - name: Give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: Prepare Dependency Matrix
        if: ${{ inputs.dependencies != '' }}
        id: prepare_matrix
        run: |
          DEPENDENCIES="${{ inputs.dependencies }}"
          IFS=',' read -r -a DEPENDENCY_LIST <<< "$DEPENDENCIES"
          DEPENDENCY_JSON=$(jq -n --arg deps "$(jq -c <<< "$DEPENDENCY_LIST")" '{"dependency": $deps | fromjson}')
          echo "DEPENDENCY_MATRIX=$DEPENDENCY_JSON" >> "$GITHUB_OUTPUT"
          echo "Dependency Matrix JSON: $DEPENDENCY_JSON"

    strategy:
      matrix:
        include: ${{ fromJson(steps.prepare_matrix.outputs.DEPENDENCY_MATRIX).dependency }}
      fail-fast: true

    steps:
      - name: Download artifact - ${{ matrix.dependency }}
        if: ${{ matrix.dependency != '' }} # redundant if 'include' is set up correctly, but good practice
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.dependency }}-package
          path: ${{ runner.temp }}/dependencies/${{ matrix.dependency }}

      - name: install packages
        if: ${{ inputs.dependencies != '' }}
        run: |
          ls -R ${{ runner.temp }}/dependencies/
          pacman -U ${{ runner.temp }}/dependencies/*/*/*.pkg.tar.zst --noconfirm

      - name: Download package
        run: git clone https://aur.archlinux.org/${{ inputs.package_name }}.git

      - name: Give build user perms
        run: chown -R build:build ${{ inputs.package_name }}

      - name: Build in clean chroot
        run: su build -c "cd ${{ inputs.package_name }} && makepkg -s --noconfirm"

      - name: Remove colons from filename
        run: |
          find ${{ inputs.package_name }} -name "*.pkg.tar.zst" -print0 | xargs -0 -I {} sh -c 'if [[ "{}" == *:* ]]; then mv "{}" "$(echo "{}" | sed "s/\([^-]\):/\1-/g")"; fi'

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.package_name }}-package
          path: ${{ inputs.package_name }}/*.pkg.tar.zst
