
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  jalbum:
    runs-on: ubuntu-latest
    needs: [java-openjfx]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download java-openjfx
        uses: actions/download-artifact@v4.1.8
        with:
          name: java-openjfx-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/jalbum.git

      - name: give build user perms
        run: chown -R build:build jalbum

      - name: build in clean chroot
        run: su build -c "cd jalbum && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' jalbum/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: jalbum-package
          path: jalbum/*.pkg.tar.zst

  java-openjfx:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/java-openjfx.git

      - name: give build user perms
        run: chown -R build:build java-openjfx

      - name: build in clean chroot
        run: su build -c "cd java-openjfx && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' java-openjfx/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: java-openjfx-package
          path: java-openjfx/*.pkg.tar.zst

  paisa-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/paisa-git.git

      - name: give build user perms
        run: chown -R build:build paisa-git

      - name: build in clean chroot
        run: su build -c "cd paisa-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' paisa-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: paisa-git-package
          path: paisa-git/*.pkg.tar.zst

  battlescribe:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/battlescribe.git

      - name: give build user perms
        run: chown -R build:build battlescribe

      - name: build in clean chroot
        run: su build -c "cd battlescribe && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' battlescribe/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: battlescribe-package
          path: battlescribe/*.pkg.tar.zst

  binaryninja-free:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/binaryninja-free.git

      - name: give build user perms
        run: chown -R build:build binaryninja-free

      - name: build in clean chroot
        run: su build -c "cd binaryninja-free && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' binaryninja-free/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: binaryninja-free-package
          path: binaryninja-free/*.pkg.tar.zst

  g15macro:
    runs-on: ubuntu-latest
    needs: [g15daemon]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download g15daemon
        uses: actions/download-artifact@v4.1.8
        with:
          name: g15daemon-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/g15macro.git

      - name: give build user perms
        run: chown -R build:build g15macro

      - name: build in clean chroot
        run: su build -c "cd g15macro && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' g15macro/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: g15macro-package
          path: g15macro/*.pkg.tar.zst

  g15daemon:
    runs-on: ubuntu-latest
    needs: [libg15render]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download libg15render
        uses: actions/download-artifact@v4.1.8
        with:
          name: libg15render-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/g15daemon.git

      - name: give build user perms
        run: chown -R build:build g15daemon

      - name: build in clean chroot
        run: su build -c "cd g15daemon && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' g15daemon/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: g15daemon-package
          path: g15daemon/*.pkg.tar.zst

  libg15render:
    runs-on: ubuntu-latest
    needs: [libg15]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download libg15
        uses: actions/download-artifact@v4.1.8
        with:
          name: libg15-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/libg15render.git

      - name: give build user perms
        run: chown -R build:build libg15render

      - name: build in clean chroot
        run: su build -c "cd libg15render && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libg15render/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libg15render-package
          path: libg15render/*.pkg.tar.zst

  libg15:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/libg15.git

      - name: give build user perms
        run: chown -R build:build libg15

      - name: build in clean chroot
        run: su build -c "cd libg15 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libg15/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libg15-package
          path: libg15/*.pkg.tar.zst

  python-labxdb-tools:
    runs-on: ubuntu-latest
    needs: [python-pyfnutils]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download python-pyfnutils
        uses: actions/download-artifact@v4.1.8
        with:
          name: python-pyfnutils-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/python-labxdb-tools.git

      - name: give build user perms
        run: chown -R build:build python-labxdb-tools

      - name: build in clean chroot
        run: su build -c "cd python-labxdb-tools && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python-labxdb-tools/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python-labxdb-tools-package
          path: python-labxdb-tools/*.pkg.tar.zst

  python-pyfnutils:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/python-pyfnutils.git

      - name: give build user perms
        run: chown -R build:build python-pyfnutils

      - name: build in clean chroot
        run: su build -c "cd python-pyfnutils && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python-pyfnutils/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python-pyfnutils-package
          path: python-pyfnutils/*.pkg.tar.zst

  wlink:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/wlink.git

      - name: give build user perms
        run: chown -R build:build wlink

      - name: build in clean chroot
        run: su build -c "cd wlink && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' wlink/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: wlink-package
          path: wlink/*.pkg.tar.zst

  manaplus-sdl2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/manaplus-sdl2.git

      - name: give build user perms
        run: chown -R build:build manaplus-sdl2

      - name: build in clean chroot
        run: su build -c "cd manaplus-sdl2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' manaplus-sdl2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: manaplus-sdl2-package
          path: manaplus-sdl2/*.pkg.tar.zst

  hid-nintendo-nso-dkms:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/hid-nintendo-nso-dkms.git

      - name: give build user perms
        run: chown -R build:build hid-nintendo-nso-dkms

      - name: build in clean chroot
        run: su build -c "cd hid-nintendo-nso-dkms && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' hid-nintendo-nso-dkms/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: hid-nintendo-nso-dkms-package
          path: hid-nintendo-nso-dkms/*.pkg.tar.zst

  asciidoc-static-pages:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/asciidoc-static-pages.git

      - name: give build user perms
        run: chown -R build:build asciidoc-static-pages

      - name: build in clean chroot
        run: su build -c "cd asciidoc-static-pages && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' asciidoc-static-pages/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: asciidoc-static-pages-package
          path: asciidoc-static-pages/*.pkg.tar.zst

  ttf-grenze-gotisch-variable:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/ttf-grenze-gotisch-variable.git

      - name: give build user perms
        run: chown -R build:build ttf-grenze-gotisch-variable

      - name: build in clean chroot
        run: su build -c "cd ttf-grenze-gotisch-variable && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' ttf-grenze-gotisch-variable/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ttf-grenze-gotisch-variable-package
          path: ttf-grenze-gotisch-variable/*.pkg.tar.zst

  ynote-desktop-bin:
    runs-on: ubuntu-latest
    needs: [electron18-bin]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download electron18-bin
        uses: actions/download-artifact@v4.1.8
        with:
          name: electron18-bin-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/ynote-desktop-bin.git

      - name: give build user perms
        run: chown -R build:build ynote-desktop-bin

      - name: build in clean chroot
        run: su build -c "cd ynote-desktop-bin && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' ynote-desktop-bin/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ynote-desktop-bin-package
          path: ynote-desktop-bin/*.pkg.tar.zst

  electron18-bin:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/electron18-bin.git

      - name: give build user perms
        run: chown -R build:build electron18-bin

      - name: build in clean chroot
        run: su build -c "cd electron18-bin && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' electron18-bin/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: electron18-bin-package
          path: electron18-bin/*.pkg.tar.zst

  jdk16-openjdk:
    runs-on: ubuntu-latest
    needs: [jre16-openjdk, jdk12-openjdk]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download jre16-openjdk
        uses: actions/download-artifact@v4.1.8
        with:
          name: jre16-openjdk-package

      - name: download jdk12-openjdk
        uses: actions/download-artifact@v4.1.8
        with:
          name: jdk12-openjdk-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/jdk16-openjdk.git

      - name: give build user perms
        run: chown -R build:build jdk16-openjdk

      - name: build in clean chroot
        run: su build -c "cd jdk16-openjdk && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' jdk16-openjdk/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: jdk16-openjdk-package
          path: jdk16-openjdk/*.pkg.tar.zst

  jre16-openjdk:
    runs-on: ubuntu-latest
    needs: [jre16-openjdk-headless, jdk12-openjdk]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download jre16-openjdk-headless
        uses: actions/download-artifact@v4.1.8
        with:
          name: jre16-openjdk-headless-package

      - name: download jdk12-openjdk
        uses: actions/download-artifact@v4.1.8
        with:
          name: jdk12-openjdk-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/jre16-openjdk.git

      - name: give build user perms
        run: chown -R build:build jre16-openjdk

      - name: build in clean chroot
        run: su build -c "cd jre16-openjdk && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' jre16-openjdk/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: jre16-openjdk-package
          path: jre16-openjdk/*.pkg.tar.zst

  jre16-openjdk-headless:
    runs-on: ubuntu-latest
    needs: [jdk12-openjdk]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download jdk12-openjdk
        uses: actions/download-artifact@v4.1.8
        with:
          name: jdk12-openjdk-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/jre16-openjdk-headless.git

      - name: give build user perms
        run: chown -R build:build jre16-openjdk-headless

      - name: build in clean chroot
        run: su build -c "cd jre16-openjdk-headless && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' jre16-openjdk-headless/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: jre16-openjdk-headless-package
          path: jre16-openjdk-headless/*.pkg.tar.zst

  jdk12-openjdk:
    runs-on: ubuntu-latest
    needs: [jre12-openjdk]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download jre12-openjdk
        uses: actions/download-artifact@v4.1.8
        with:
          name: jre12-openjdk-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/jdk12-openjdk.git

      - name: give build user perms
        run: chown -R build:build jdk12-openjdk

      - name: build in clean chroot
        run: su build -c "cd jdk12-openjdk && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' jdk12-openjdk/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: jdk12-openjdk-package
          path: jdk12-openjdk/*.pkg.tar.zst

  jre12-openjdk:
    runs-on: ubuntu-latest
    needs: [jre12-openjdk-headless]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download jre12-openjdk-headless
        uses: actions/download-artifact@v4.1.8
        with:
          name: jre12-openjdk-headless-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/jre12-openjdk.git

      - name: give build user perms
        run: chown -R build:build jre12-openjdk

      - name: build in clean chroot
        run: su build -c "cd jre12-openjdk && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' jre12-openjdk/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: jre12-openjdk-package
          path: jre12-openjdk/*.pkg.tar.zst

  jre12-openjdk-headless:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/jre12-openjdk-headless.git

      - name: give build user perms
        run: chown -R build:build jre12-openjdk-headless

      - name: build in clean chroot
        run: su build -c "cd jre12-openjdk-headless && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' jre12-openjdk-headless/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: jre12-openjdk-headless-package
          path: jre12-openjdk-headless/*.pkg.tar.zst

  jdk12-openjdk:
    runs-on: ubuntu-latest
    needs: [jre12-openjdk]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download jre12-openjdk
        uses: actions/download-artifact@v4.1.8
        with:
          name: jre12-openjdk-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/jdk12-openjdk.git

      - name: give build user perms
        run: chown -R build:build jdk12-openjdk

      - name: build in clean chroot
        run: su build -c "cd jdk12-openjdk && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' jdk12-openjdk/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: jdk12-openjdk-package
          path: jdk12-openjdk/*.pkg.tar.zst

  jre12-openjdk:
    runs-on: ubuntu-latest
    needs: [jre12-openjdk-headless]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download jre12-openjdk-headless
        uses: actions/download-artifact@v4.1.8
        with:
          name: jre12-openjdk-headless-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/jre12-openjdk.git

      - name: give build user perms
        run: chown -R build:build jre12-openjdk

      - name: build in clean chroot
        run: su build -c "cd jre12-openjdk && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' jre12-openjdk/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: jre12-openjdk-package
          path: jre12-openjdk/*.pkg.tar.zst

  jre12-openjdk-headless:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/jre12-openjdk-headless.git

      - name: give build user perms
        run: chown -R build:build jre12-openjdk-headless

      - name: build in clean chroot
        run: su build -c "cd jre12-openjdk-headless && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' jre12-openjdk-headless/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: jre12-openjdk-headless-package
          path: jre12-openjdk-headless/*.pkg.tar.zst

  jdk12-openjdk:
    runs-on: ubuntu-latest
    needs: [jre12-openjdk]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download jre12-openjdk
        uses: actions/download-artifact@v4.1.8
        with:
          name: jre12-openjdk-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/jdk12-openjdk.git

      - name: give build user perms
        run: chown -R build:build jdk12-openjdk

      - name: build in clean chroot
        run: su build -c "cd jdk12-openjdk && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' jdk12-openjdk/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: jdk12-openjdk-package
          path: jdk12-openjdk/*.pkg.tar.zst

  jre12-openjdk:
    runs-on: ubuntu-latest
    needs: [jre12-openjdk-headless]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download jre12-openjdk-headless
        uses: actions/download-artifact@v4.1.8
        with:
          name: jre12-openjdk-headless-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/jre12-openjdk.git

      - name: give build user perms
        run: chown -R build:build jre12-openjdk

      - name: build in clean chroot
        run: su build -c "cd jre12-openjdk && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' jre12-openjdk/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: jre12-openjdk-package
          path: jre12-openjdk/*.pkg.tar.zst

  jre12-openjdk-headless:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/jre12-openjdk-headless.git

      - name: give build user perms
        run: chown -R build:build jre12-openjdk-headless

      - name: build in clean chroot
        run: su build -c "cd jre12-openjdk-headless && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' jre12-openjdk-headless/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: jre12-openjdk-headless-package
          path: jre12-openjdk-headless/*.pkg.tar.zst

  protonmail-nativefier:
    runs-on: ubuntu-latest
    needs: [nodejs-nativefier]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download nodejs-nativefier
        uses: actions/download-artifact@v4.1.8
        with:
          name: nodejs-nativefier-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/protonmail-nativefier.git

      - name: give build user perms
        run: chown -R build:build protonmail-nativefier

      - name: build in clean chroot
        run: su build -c "cd protonmail-nativefier && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' protonmail-nativefier/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: protonmail-nativefier-package
          path: protonmail-nativefier/*.pkg.tar.zst

  nodejs-nativefier:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/nodejs-nativefier.git

      - name: give build user perms
        run: chown -R build:build nodejs-nativefier

      - name: build in clean chroot
        run: su build -c "cd nodejs-nativefier && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' nodejs-nativefier/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: nodejs-nativefier-package
          path: nodejs-nativefier/*.pkg.tar.zst

  perl-git-repository:
    runs-on: ubuntu-latest
    needs: [perl-git-version-compare, perl-system-command]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download perl-git-version-compare
        uses: actions/download-artifact@v4.1.8
        with:
          name: perl-git-version-compare-package

      - name: download perl-system-command
        uses: actions/download-artifact@v4.1.8
        with:
          name: perl-system-command-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/perl-git-repository.git

      - name: give build user perms
        run: chown -R build:build perl-git-repository

      - name: build in clean chroot
        run: su build -c "cd perl-git-repository && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' perl-git-repository/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: perl-git-repository-package
          path: perl-git-repository/*.pkg.tar.zst

  perl-git-version-compare:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/perl-git-version-compare.git

      - name: give build user perms
        run: chown -R build:build perl-git-version-compare

      - name: build in clean chroot
        run: su build -c "cd perl-git-version-compare && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' perl-git-version-compare/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: perl-git-version-compare-package
          path: perl-git-version-compare/*.pkg.tar.zst

  perl-system-command:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/perl-system-command.git

      - name: give build user perms
        run: chown -R build:build perl-system-command

      - name: build in clean chroot
        run: su build -c "cd perl-system-command && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' perl-system-command/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: perl-system-command-package
          path: perl-system-command/*.pkg.tar.zst

  perl-io-interface:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/perl-io-interface.git

      - name: give build user perms
        run: chown -R build:build perl-io-interface

      - name: build in clean chroot
        run: su build -c "cd perl-io-interface && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' perl-io-interface/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: perl-io-interface-package
          path: perl-io-interface/*.pkg.tar.zst

  vapoursynth-plugin-continuityfixer-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/vapoursynth-plugin-continuityfixer-git.git

      - name: give build user perms
        run: chown -R build:build vapoursynth-plugin-continuityfixer-git

      - name: build in clean chroot
        run: su build -c "cd vapoursynth-plugin-continuityfixer-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' vapoursynth-plugin-continuityfixer-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: vapoursynth-plugin-continuityfixer-git-package
          path: vapoursynth-plugin-continuityfixer-git/*.pkg.tar.zst

  djgpp-binutils:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/djgpp-binutils.git

      - name: give build user perms
        run: chown -R build:build djgpp-binutils

      - name: build in clean chroot
        run: su build -c "cd djgpp-binutils && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' djgpp-binutils/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: djgpp-binutils-package
          path: djgpp-binutils/*.pkg.tar.zst

  xidle:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/xidle.git

      - name: give build user perms
        run: chown -R build:build xidle

      - name: build in clean chroot
        run: su build -c "cd xidle && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' xidle/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: xidle-package
          path: xidle/*.pkg.tar.zst

  queercat-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/queercat-git.git

      - name: give build user perms
        run: chown -R build:build queercat-git

      - name: build in clean chroot
        run: su build -c "cd queercat-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' queercat-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: queercat-git-package
          path: queercat-git/*.pkg.tar.zst

  deltaclient-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/deltaclient-git.git

      - name: give build user perms
        run: chown -R build:build deltaclient-git

      - name: build in clean chroot
        run: su build -c "cd deltaclient-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' deltaclient-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: deltaclient-git-package
          path: deltaclient-git/*.pkg.tar.zst

  ot-bboi-docs:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/ot-bboi-docs.git

      - name: give build user perms
        run: chown -R build:build ot-bboi-docs

      - name: build in clean chroot
        run: su build -c "cd ot-bboi-docs && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' ot-bboi-docs/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ot-bboi-docs-package
          path: ot-bboi-docs/*.pkg.tar.zst

  ibc:
    runs-on: ubuntu-latest
    needs: [ib-tws]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download ib-tws
        uses: actions/download-artifact@v4.1.8
        with:
          name: ib-tws-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/ibc.git

      - name: give build user perms
        run: chown -R build:build ibc

      - name: build in clean chroot
        run: su build -c "cd ibc && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' ibc/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ibc-package
          path: ibc/*.pkg.tar.zst

  ib-tws:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/ib-tws.git

      - name: give build user perms
        run: chown -R build:build ib-tws

      - name: build in clean chroot
        run: su build -c "cd ib-tws && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' ib-tws/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ib-tws-package
          path: ib-tws/*.pkg.tar.zst

  webcord-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/webcord-git.git

      - name: give build user perms
        run: chown -R build:build webcord-git

      - name: build in clean chroot
        run: su build -c "cd webcord-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' webcord-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: webcord-git-package
          path: webcord-git/*.pkg.tar.zst

  kitty-xterm-symlinks:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/kitty-xterm-symlinks.git

      - name: give build user perms
        run: chown -R build:build kitty-xterm-symlinks

      - name: build in clean chroot
        run: su build -c "cd kitty-xterm-symlinks && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' kitty-xterm-symlinks/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: kitty-xterm-symlinks-package
          path: kitty-xterm-symlinks/*.pkg.tar.zst

  python-google-cloud-bigquery-storage:
    runs-on: ubuntu-latest
    needs: [python-proto-plus, python-recommonmark]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download python-proto-plus
        uses: actions/download-artifact@v4.1.8
        with:
          name: python-proto-plus-package

      - name: download python-recommonmark
        uses: actions/download-artifact@v4.1.8
        with:
          name: python-recommonmark-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/python-google-cloud-bigquery-storage.git

      - name: give build user perms
        run: chown -R build:build python-google-cloud-bigquery-storage

      - name: build in clean chroot
        run: su build -c "cd python-google-cloud-bigquery-storage && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python-google-cloud-bigquery-storage/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python-google-cloud-bigquery-storage-package
          path: python-google-cloud-bigquery-storage/*.pkg.tar.zst

  python-proto-plus:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/python-proto-plus.git

      - name: give build user perms
        run: chown -R build:build python-proto-plus

      - name: build in clean chroot
        run: su build -c "cd python-proto-plus && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python-proto-plus/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python-proto-plus-package
          path: python-proto-plus/*.pkg.tar.zst

  python-recommonmark:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/python-recommonmark.git

      - name: give build user perms
        run: chown -R build:build python-recommonmark

      - name: build in clean chroot
        run: su build -c "cd python-recommonmark && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python-recommonmark/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python-recommonmark-package
          path: python-recommonmark/*.pkg.tar.zst

  dayjournal:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/dayjournal.git

      - name: give build user perms
        run: chown -R build:build dayjournal

      - name: build in clean chroot
        run: su build -c "cd dayjournal && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' dayjournal/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: dayjournal-package
          path: dayjournal/*.pkg.tar.zst

  redeclipse:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/redeclipse.git

      - name: give build user perms
        run: chown -R build:build redeclipse

      - name: build in clean chroot
        run: su build -c "cd redeclipse && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' redeclipse/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: redeclipse-package
          path: redeclipse/*.pkg.tar.zst

  syncevolution:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/syncevolution.git

      - name: give build user perms
        run: chown -R build:build syncevolution

      - name: build in clean chroot
        run: su build -c "cd syncevolution && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' syncevolution/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: syncevolution-package
          path: syncevolution/*.pkg.tar.zst

  lighthouse-ethereum:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/lighthouse-ethereum.git

      - name: give build user perms
        run: chown -R build:build lighthouse-ethereum

      - name: build in clean chroot
        run: su build -c "cd lighthouse-ethereum && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' lighthouse-ethereum/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: lighthouse-ethereum-package
          path: lighthouse-ethereum/*.pkg.tar.zst

  cuda-11.7:
    runs-on: ubuntu-latest
    needs: [gcc11-libs, gcc11]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download gcc11-libs
        uses: actions/download-artifact@v4.1.8
        with:
          name: gcc11-libs-package

      - name: download gcc11
        uses: actions/download-artifact@v4.1.8
        with:
          name: gcc11-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/cuda-11.7.git

      - name: give build user perms
        run: chown -R build:build cuda-11.7

      - name: build in clean chroot
        run: su build -c "cd cuda-11.7 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' cuda-11.7/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: cuda-11.7-package
          path: cuda-11.7/*.pkg.tar.zst

  gcc11-libs:
    runs-on: ubuntu-latest
    needs: [gcc13]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download gcc13
        uses: actions/download-artifact@v4.1.8
        with:
          name: gcc13-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/gcc11-libs.git

      - name: give build user perms
        run: chown -R build:build gcc11-libs

      - name: build in clean chroot
        run: su build -c "cd gcc11-libs && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' gcc11-libs/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: gcc11-libs-package
          path: gcc11-libs/*.pkg.tar.zst

  gcc13:
    runs-on: ubuntu-latest
    needs: [gcc13-libs]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download gcc13-libs
        uses: actions/download-artifact@v4.1.8
        with:
          name: gcc13-libs-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/gcc13.git

      - name: give build user perms
        run: chown -R build:build gcc13

      - name: build in clean chroot
        run: su build -c "cd gcc13 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' gcc13/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: gcc13-package
          path: gcc13/*.pkg.tar.zst

  gcc13-libs:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/gcc13-libs.git

      - name: give build user perms
        run: chown -R build:build gcc13-libs

      - name: build in clean chroot
        run: su build -c "cd gcc13-libs && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' gcc13-libs/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: gcc13-libs-package
          path: gcc13-libs/*.pkg.tar.zst

  gcc11:
    runs-on: ubuntu-latest
    needs: [gcc11-libs, gcc13]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download gcc11-libs
        uses: actions/download-artifact@v4.1.8
        with:
          name: gcc11-libs-package

      - name: download gcc13
        uses: actions/download-artifact@v4.1.8
        with:
          name: gcc13-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/gcc11.git

      - name: give build user perms
        run: chown -R build:build gcc11

      - name: build in clean chroot
        run: su build -c "cd gcc11 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' gcc11/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: gcc11-package
          path: gcc11/*.pkg.tar.zst

  gcc11-libs:
    runs-on: ubuntu-latest
    needs: [gcc13]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download gcc13
        uses: actions/download-artifact@v4.1.8
        with:
          name: gcc13-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/gcc11-libs.git

      - name: give build user perms
        run: chown -R build:build gcc11-libs

      - name: build in clean chroot
        run: su build -c "cd gcc11-libs && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' gcc11-libs/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: gcc11-libs-package
          path: gcc11-libs/*.pkg.tar.zst

  gcc13:
    runs-on: ubuntu-latest
    needs: [gcc13-libs]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download gcc13-libs
        uses: actions/download-artifact@v4.1.8
        with:
          name: gcc13-libs-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/gcc13.git

      - name: give build user perms
        run: chown -R build:build gcc13

      - name: build in clean chroot
        run: su build -c "cd gcc13 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' gcc13/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: gcc13-package
          path: gcc13/*.pkg.tar.zst

  gcc13-libs:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/gcc13-libs.git

      - name: give build user perms
        run: chown -R build:build gcc13-libs

      - name: build in clean chroot
        run: su build -c "cd gcc13-libs && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' gcc13-libs/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: gcc13-libs-package
          path: gcc13-libs/*.pkg.tar.zst

  gcc13:
    runs-on: ubuntu-latest
    needs: [gcc13-libs]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download gcc13-libs
        uses: actions/download-artifact@v4.1.8
        with:
          name: gcc13-libs-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/gcc13.git

      - name: give build user perms
        run: chown -R build:build gcc13

      - name: build in clean chroot
        run: su build -c "cd gcc13 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' gcc13/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: gcc13-package
          path: gcc13/*.pkg.tar.zst

  gcc13-libs:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/gcc13-libs.git

      - name: give build user perms
        run: chown -R build:build gcc13-libs

      - name: build in clean chroot
        run: su build -c "cd gcc13-libs && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' gcc13-libs/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: gcc13-libs-package
          path: gcc13-libs/*.pkg.tar.zst

  klevernotes:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/klevernotes.git

      - name: give build user perms
        run: chown -R build:build klevernotes

      - name: build in clean chroot
        run: su build -c "cd klevernotes && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' klevernotes/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: klevernotes-package
          path: klevernotes/*.pkg.tar.zst

  codecrypt-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/codecrypt-git.git

      - name: give build user perms
        run: chown -R build:build codecrypt-git

      - name: build in clean chroot
        run: su build -c "cd codecrypt-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' codecrypt-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: codecrypt-git-package
          path: codecrypt-git/*.pkg.tar.zst

  go-task-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/go-task-git.git

      - name: give build user perms
        run: chown -R build:build go-task-git

      - name: build in clean chroot
        run: su build -c "cd go-task-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' go-task-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: go-task-git-package
          path: go-task-git/*.pkg.tar.zst

  openxcom:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/openxcom.git

      - name: give build user perms
        run: chown -R build:build openxcom

      - name: build in clean chroot
        run: su build -c "cd openxcom && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' openxcom/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: openxcom-package
          path: openxcom/*.pkg.tar.zst

  imrsh-git:
    runs-on: ubuntu-latest
    needs: [libtickit, mrsh-git]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download libtickit
        uses: actions/download-artifact@v4.1.8
        with:
          name: libtickit-package

      - name: download mrsh-git
        uses: actions/download-artifact@v4.1.8
        with:
          name: mrsh-git-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/imrsh-git.git

      - name: give build user perms
        run: chown -R build:build imrsh-git

      - name: build in clean chroot
        run: su build -c "cd imrsh-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' imrsh-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: imrsh-git-package
          path: imrsh-git/*.pkg.tar.zst

  libtickit:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/libtickit.git

      - name: give build user perms
        run: chown -R build:build libtickit

      - name: build in clean chroot
        run: su build -c "cd libtickit && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libtickit/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libtickit-package
          path: libtickit/*.pkg.tar.zst

  mrsh-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/mrsh-git.git

      - name: give build user perms
        run: chown -R build:build mrsh-git

      - name: build in clean chroot
        run: su build -c "cd mrsh-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' mrsh-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: mrsh-git-package
          path: mrsh-git/*.pkg.tar.zst

  tesseract-data-glg-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/tesseract-data-glg-git.git

      - name: give build user perms
        run: chown -R build:build tesseract-data-glg-git

      - name: build in clean chroot
        run: su build -c "cd tesseract-data-glg-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' tesseract-data-glg-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: tesseract-data-glg-git-package
          path: tesseract-data-glg-git/*.pkg.tar.zst

  libpff-git:
    runs-on: ubuntu-latest
    needs: [libbfio-git]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download libbfio-git
        uses: actions/download-artifact@v4.1.8
        with:
          name: libbfio-git-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/libpff-git.git

      - name: give build user perms
        run: chown -R build:build libpff-git

      - name: build in clean chroot
        run: su build -c "cd libpff-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libpff-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libpff-git-package
          path: libpff-git/*.pkg.tar.zst

  libbfio-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/libbfio-git.git

      - name: give build user perms
        run: chown -R build:build libbfio-git

      - name: build in clean chroot
        run: su build -c "cd libbfio-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libbfio-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libbfio-git-package
          path: libbfio-git/*.pkg.tar.zst

  ttf-ms-win10-auto:
    runs-on: ubuntu-latest
    needs: [httpfs2-2gbplus]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download httpfs2-2gbplus
        uses: actions/download-artifact@v4.1.8
        with:
          name: httpfs2-2gbplus-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/ttf-ms-win10-auto.git

      - name: give build user perms
        run: chown -R build:build ttf-ms-win10-auto

      - name: build in clean chroot
        run: su build -c "cd ttf-ms-win10-auto && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' ttf-ms-win10-auto/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ttf-ms-win10-auto-package
          path: ttf-ms-win10-auto/*.pkg.tar.zst

  httpfs2-2gbplus:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/httpfs2-2gbplus.git

      - name: give build user perms
        run: chown -R build:build httpfs2-2gbplus

      - name: build in clean chroot
        run: su build -c "cd httpfs2-2gbplus && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' httpfs2-2gbplus/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: httpfs2-2gbplus-package
          path: httpfs2-2gbplus/*.pkg.tar.zst

  lua51-event:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/lua51-event.git

      - name: give build user perms
        run: chown -R build:build lua51-event

      - name: build in clean chroot
        run: su build -c "cd lua51-event && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' lua51-event/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: lua51-event-package
          path: lua51-event/*.pkg.tar.zst

  asciiflow2-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/asciiflow2-git.git

      - name: give build user perms
        run: chown -R build:build asciiflow2-git

      - name: build in clean chroot
        run: su build -c "cd asciiflow2-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' asciiflow2-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: asciiflow2-git-package
          path: asciiflow2-git/*.pkg.tar.zst

  spacx-gtk-theme:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/spacx-gtk-theme.git

      - name: give build user perms
        run: chown -R build:build spacx-gtk-theme

      - name: build in clean chroot
        run: su build -c "cd spacx-gtk-theme && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' spacx-gtk-theme/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: spacx-gtk-theme-package
          path: spacx-gtk-theme/*.pkg.tar.zst

  mindforger:
    runs-on: ubuntu-latest
    needs: [qt5-webkit]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download qt5-webkit
        uses: actions/download-artifact@v4.1.8
        with:
          name: qt5-webkit-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/mindforger.git

      - name: give build user perms
        run: chown -R build:build mindforger

      - name: build in clean chroot
        run: su build -c "cd mindforger && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' mindforger/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: mindforger-package
          path: mindforger/*.pkg.tar.zst

  qt5-webkit:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/qt5-webkit.git

      - name: give build user perms
        run: chown -R build:build qt5-webkit

      - name: build in clean chroot
        run: su build -c "cd qt5-webkit && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' qt5-webkit/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: qt5-webkit-package
          path: qt5-webkit/*.pkg.tar.zst

  watchman-bin:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/watchman-bin.git

      - name: give build user perms
        run: chown -R build:build watchman-bin

      - name: build in clean chroot
        run: su build -c "cd watchman-bin && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' watchman-bin/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: watchman-bin-package
          path: watchman-bin/*.pkg.tar.zst

  raxml-ng:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/raxml-ng.git

      - name: give build user perms
        run: chown -R build:build raxml-ng

      - name: build in clean chroot
        run: su build -c "cd raxml-ng && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' raxml-ng/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: raxml-ng-package
          path: raxml-ng/*.pkg.tar.zst

  python-formatstring:
    runs-on: ubuntu-latest
    needs: [python2-setuptools]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download python2-setuptools
        uses: actions/download-artifact@v4.1.8
        with:
          name: python2-setuptools-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/python-formatstring.git

      - name: give build user perms
        run: chown -R build:build python-formatstring

      - name: build in clean chroot
        run: su build -c "cd python-formatstring && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python-formatstring/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python-formatstring-package
          path: python-formatstring/*.pkg.tar.zst

  python2-setuptools:
    runs-on: ubuntu-latest
    needs: [python2]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download python2
        uses: actions/download-artifact@v4.1.8
        with:
          name: python2-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/python2-setuptools.git

      - name: give build user perms
        run: chown -R build:build python2-setuptools

      - name: build in clean chroot
        run: su build -c "cd python2-setuptools && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python2-setuptools/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python2-setuptools-package
          path: python2-setuptools/*.pkg.tar.zst

  python2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/python2.git

      - name: give build user perms
        run: chown -R build:build python2

      - name: build in clean chroot
        run: su build -c "cd python2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python2-package
          path: python2/*.pkg.tar.zst

  beet-summarize-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/beet-summarize-git.git

      - name: give build user perms
        run: chown -R build:build beet-summarize-git

      - name: build in clean chroot
        run: su build -c "cd beet-summarize-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' beet-summarize-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: beet-summarize-git-package
          path: beet-summarize-git/*.pkg.tar.zst

  televido:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/televido.git

      - name: give build user perms
        run: chown -R build:build televido

      - name: build in clean chroot
        run: su build -c "cd televido && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' televido/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: televido-package
          path: televido/*.pkg.tar.zst

  rofication-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/rofication-git.git

      - name: give build user perms
        run: chown -R build:build rofication-git

      - name: build in clean chroot
        run: su build -c "cd rofication-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' rofication-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: rofication-git-package
          path: rofication-git/*.pkg.tar.zst

  libxnvctrl-525xx:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/libxnvctrl-525xx.git

      - name: give build user perms
        run: chown -R build:build libxnvctrl-525xx

      - name: build in clean chroot
        run: su build -c "cd libxnvctrl-525xx && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libxnvctrl-525xx/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libxnvctrl-525xx-package
          path: libxnvctrl-525xx/*.pkg.tar.zst
