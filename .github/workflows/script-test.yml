
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  pacseek-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/pacseek-git.git

      - name: give build user perms
        run: chown -R build:build pacseek-git

      - name: build in clean chroot
        run: su build -c "cd pacseek-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' pacseek-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: pacseek-git-package
          path: pacseek-git/*.pkg.tar.zst

  emacs-haxe:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/emacs-haxe.git

      - name: give build user perms
        run: chown -R build:build emacs-haxe

      - name: build in clean chroot
        run: su build -c "cd emacs-haxe && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' emacs-haxe/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: emacs-haxe-package
          path: emacs-haxe/*.pkg.tar.zst

  maple18:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/maple18.git

      - name: give build user perms
        run: chown -R build:build maple18

      - name: build in clean chroot
        run: su build -c "cd maple18 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' maple18/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: maple18-package
          path: maple18/*.pkg.tar.zst

  rpcs3-udev:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/rpcs3-udev.git

      - name: give build user perms
        run: chown -R build:build rpcs3-udev

      - name: build in clean chroot
        run: su build -c "cd rpcs3-udev && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' rpcs3-udev/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: rpcs3-udev-package
          path: rpcs3-udev/*.pkg.tar.zst

  python-veryprettytable:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/python-veryprettytable.git

      - name: give build user perms
        run: chown -R build:build python-veryprettytable

      - name: build in clean chroot
        run: su build -c "cd python-veryprettytable && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python-veryprettytable/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python-veryprettytable-package
          path: python-veryprettytable/*.pkg.tar.zst

  ssmtp:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/ssmtp.git

      - name: give build user perms
        run: chown -R build:build ssmtp

      - name: build in clean chroot
        run: su build -c "cd ssmtp && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' ssmtp/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ssmtp-package
          path: ssmtp/*.pkg.tar.zst

  qtbitcointrader:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/qtbitcointrader.git

      - name: give build user perms
        run: chown -R build:build qtbitcointrader

      - name: build in clean chroot
        run: su build -c "cd qtbitcointrader && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' qtbitcointrader/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: qtbitcointrader-package
          path: qtbitcointrader/*.pkg.tar.zst

  suwidgets-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/suwidgets-git.git

      - name: give build user perms
        run: chown -R build:build suwidgets-git

      - name: build in clean chroot
        run: su build -c "cd suwidgets-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' suwidgets-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: suwidgets-git-package
          path: suwidgets-git/*.pkg.tar.zst

  digikam-git:
    runs-on: ubuntu-latest
    needs: [kcalendarcore5, kfilemetadata5]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download kcalendarcore5
        uses: actions/download-artifact@v4.1.8
        with:
          name: kcalendarcore5-package

      - name: download kfilemetadata5
        uses: actions/download-artifact@v4.1.8
        with:
          name: kfilemetadata5-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/digikam-git.git

      - name: give build user perms
        run: chown -R build:build digikam-git

      - name: build in clean chroot
        run: su build -c "cd digikam-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' digikam-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: digikam-git-package
          path: digikam-git/*.pkg.tar.zst

  kcalendarcore5:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/kcalendarcore5.git

      - name: give build user perms
        run: chown -R build:build kcalendarcore5

      - name: build in clean chroot
        run: su build -c "cd kcalendarcore5 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' kcalendarcore5/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: kcalendarcore5-package
          path: kcalendarcore5/*.pkg.tar.zst

  kfilemetadata5:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/kfilemetadata5.git

      - name: give build user perms
        run: chown -R build:build kfilemetadata5

      - name: build in clean chroot
        run: su build -c "cd kfilemetadata5 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' kfilemetadata5/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: kfilemetadata5-package
          path: kfilemetadata5/*.pkg.tar.zst

  perl-rest-client:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/perl-rest-client.git

      - name: give build user perms
        run: chown -R build:build perl-rest-client

      - name: build in clean chroot
        run: su build -c "cd perl-rest-client && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' perl-rest-client/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: perl-rest-client-package
          path: perl-rest-client/*.pkg.tar.zst

  python-baycomp:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/python-baycomp.git

      - name: give build user perms
        run: chown -R build:build python-baycomp

      - name: build in clean chroot
        run: su build -c "cd python-baycomp && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python-baycomp/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python-baycomp-package
          path: python-baycomp/*.pkg.tar.zst

  rust-racer-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/rust-racer-git.git

      - name: give build user perms
        run: chown -R build:build rust-racer-git

      - name: build in clean chroot
        run: su build -c "cd rust-racer-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' rust-racer-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: rust-racer-git-package
          path: rust-racer-git/*.pkg.tar.zst

  templ-bin:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/templ-bin.git

      - name: give build user perms
        run: chown -R build:build templ-bin

      - name: build in clean chroot
        run: su build -c "cd templ-bin && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' templ-bin/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: templ-bin-package
          path: templ-bin/*.pkg.tar.zst

  watermarker:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/watermarker.git

      - name: give build user perms
        run: chown -R build:build watermarker

      - name: build in clean chroot
        run: su build -c "cd watermarker && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' watermarker/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: watermarker-package
          path: watermarker/*.pkg.tar.zst

  guardian-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/guardian-git.git

      - name: give build user perms
        run: chown -R build:build guardian-git

      - name: build in clean chroot
        run: su build -c "cd guardian-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' guardian-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: guardian-git-package
          path: guardian-git/*.pkg.tar.zst

  multiview:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/multiview.git

      - name: give build user perms
        run: chown -R build:build multiview

      - name: build in clean chroot
        run: su build -c "cd multiview && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' multiview/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: multiview-package
          path: multiview/*.pkg.tar.zst

  faac-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/faac-git.git

      - name: give build user perms
        run: chown -R build:build faac-git

      - name: build in clean chroot
        run: su build -c "cd faac-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' faac-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: faac-git-package
          path: faac-git/*.pkg.tar.zst

  onivim2:
    runs-on: ubuntu-latest
    needs: [esy, python2]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download esy
        uses: actions/download-artifact@v4.1.8
        with:
          name: esy-package

      - name: download python2
        uses: actions/download-artifact@v4.1.8
        with:
          name: python2-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/onivim2.git

      - name: give build user perms
        run: chown -R build:build onivim2

      - name: build in clean chroot
        run: su build -c "cd onivim2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' onivim2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: onivim2-package
          path: onivim2/*.pkg.tar.zst

  esy:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/esy.git

      - name: give build user perms
        run: chown -R build:build esy

      - name: build in clean chroot
        run: su build -c "cd esy && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' esy/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: esy-package
          path: esy/*.pkg.tar.zst

  python2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/python2.git

      - name: give build user perms
        run: chown -R build:build python2

      - name: build in clean chroot
        run: su build -c "cd python2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python2-package
          path: python2/*.pkg.tar.zst

  timr-bin:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/timr-bin.git

      - name: give build user perms
        run: chown -R build:build timr-bin

      - name: build in clean chroot
        run: su build -c "cd timr-bin && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' timr-bin/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: timr-bin-package
          path: timr-bin/*.pkg.tar.zst

  sonar-scanner:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/sonar-scanner.git

      - name: give build user perms
        run: chown -R build:build sonar-scanner

      - name: build in clean chroot
        run: su build -c "cd sonar-scanner && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' sonar-scanner/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: sonar-scanner-package
          path: sonar-scanner/*.pkg.tar.zst

  base16-manager-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/base16-manager-git.git

      - name: give build user perms
        run: chown -R build:build base16-manager-git

      - name: build in clean chroot
        run: su build -c "cd base16-manager-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' base16-manager-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: base16-manager-git-package
          path: base16-manager-git/*.pkg.tar.zst

  vt-cli-bin:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/vt-cli-bin.git

      - name: give build user perms
        run: chown -R build:build vt-cli-bin

      - name: build in clean chroot
        run: su build -c "cd vt-cli-bin && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' vt-cli-bin/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: vt-cli-bin-package
          path: vt-cli-bin/*.pkg.tar.zst

  libreoffice-dev-as:
    runs-on: ubuntu-latest
    needs: [libreoffice-dev-bin]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download libreoffice-dev-bin
        uses: actions/download-artifact@v4.1.8
        with:
          name: libreoffice-dev-bin-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/libreoffice-dev-as.git

      - name: give build user perms
        run: chown -R build:build libreoffice-dev-as

      - name: build in clean chroot
        run: su build -c "cd libreoffice-dev-as && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libreoffice-dev-as/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libreoffice-dev-as-package
          path: libreoffice-dev-as/*.pkg.tar.zst

  libreoffice-dev-bin:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/libreoffice-dev-bin.git

      - name: give build user perms
        run: chown -R build:build libreoffice-dev-bin

      - name: build in clean chroot
        run: su build -c "cd libreoffice-dev-bin && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libreoffice-dev-bin/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libreoffice-dev-bin-package
          path: libreoffice-dev-bin/*.pkg.tar.zst

  coot:
    runs-on: ubuntu-latest
    needs: [libccp4, libclipper, fftw2-float, libssm, mmdb2]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download libccp4
        uses: actions/download-artifact@v4.1.8
        with:
          name: libccp4-package

      - name: download libclipper
        uses: actions/download-artifact@v4.1.8
        with:
          name: libclipper-package

      - name: download fftw2-float
        uses: actions/download-artifact@v4.1.8
        with:
          name: fftw2-float-package

      - name: download libssm
        uses: actions/download-artifact@v4.1.8
        with:
          name: libssm-package

      - name: download mmdb2
        uses: actions/download-artifact@v4.1.8
        with:
          name: mmdb2-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/coot.git

      - name: give build user perms
        run: chown -R build:build coot

      - name: build in clean chroot
        run: su build -c "cd coot && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' coot/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: coot-package
          path: coot/*.pkg.tar.zst

  libccp4:
    runs-on: ubuntu-latest
    needs: [mmdb2]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download mmdb2
        uses: actions/download-artifact@v4.1.8
        with:
          name: mmdb2-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/libccp4.git

      - name: give build user perms
        run: chown -R build:build libccp4

      - name: build in clean chroot
        run: su build -c "cd libccp4 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libccp4/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libccp4-package
          path: libccp4/*.pkg.tar.zst

  mmdb2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/mmdb2.git

      - name: give build user perms
        run: chown -R build:build mmdb2

      - name: build in clean chroot
        run: su build -c "cd mmdb2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' mmdb2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: mmdb2-package
          path: mmdb2/*.pkg.tar.zst

  libclipper:
    runs-on: ubuntu-latest
    needs: [libccp4, mmdb2, fftw2-float, libssm]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download libccp4
        uses: actions/download-artifact@v4.1.8
        with:
          name: libccp4-package

      - name: download mmdb2
        uses: actions/download-artifact@v4.1.8
        with:
          name: mmdb2-package

      - name: download fftw2-float
        uses: actions/download-artifact@v4.1.8
        with:
          name: fftw2-float-package

      - name: download libssm
        uses: actions/download-artifact@v4.1.8
        with:
          name: libssm-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/libclipper.git

      - name: give build user perms
        run: chown -R build:build libclipper

      - name: build in clean chroot
        run: su build -c "cd libclipper && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libclipper/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libclipper-package
          path: libclipper/*.pkg.tar.zst

  libccp4:
    runs-on: ubuntu-latest
    needs: [mmdb2]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download mmdb2
        uses: actions/download-artifact@v4.1.8
        with:
          name: mmdb2-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/libccp4.git

      - name: give build user perms
        run: chown -R build:build libccp4

      - name: build in clean chroot
        run: su build -c "cd libccp4 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libccp4/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libccp4-package
          path: libccp4/*.pkg.tar.zst

  mmdb2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/mmdb2.git

      - name: give build user perms
        run: chown -R build:build mmdb2

      - name: build in clean chroot
        run: su build -c "cd mmdb2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' mmdb2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: mmdb2-package
          path: mmdb2/*.pkg.tar.zst

  mmdb2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/mmdb2.git

      - name: give build user perms
        run: chown -R build:build mmdb2

      - name: build in clean chroot
        run: su build -c "cd mmdb2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' mmdb2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: mmdb2-package
          path: mmdb2/*.pkg.tar.zst

  fftw2-float:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/fftw2-float.git

      - name: give build user perms
        run: chown -R build:build fftw2-float

      - name: build in clean chroot
        run: su build -c "cd fftw2-float && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' fftw2-float/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: fftw2-float-package
          path: fftw2-float/*.pkg.tar.zst

  libssm:
    runs-on: ubuntu-latest
    needs: [mmdb2, libccp4]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download mmdb2
        uses: actions/download-artifact@v4.1.8
        with:
          name: mmdb2-package

      - name: download libccp4
        uses: actions/download-artifact@v4.1.8
        with:
          name: libccp4-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/libssm.git

      - name: give build user perms
        run: chown -R build:build libssm

      - name: build in clean chroot
        run: su build -c "cd libssm && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libssm/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libssm-package
          path: libssm/*.pkg.tar.zst

  mmdb2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/mmdb2.git

      - name: give build user perms
        run: chown -R build:build mmdb2

      - name: build in clean chroot
        run: su build -c "cd mmdb2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' mmdb2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: mmdb2-package
          path: mmdb2/*.pkg.tar.zst

  libccp4:
    runs-on: ubuntu-latest
    needs: [mmdb2]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download mmdb2
        uses: actions/download-artifact@v4.1.8
        with:
          name: mmdb2-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/libccp4.git

      - name: give build user perms
        run: chown -R build:build libccp4

      - name: build in clean chroot
        run: su build -c "cd libccp4 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libccp4/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libccp4-package
          path: libccp4/*.pkg.tar.zst

  mmdb2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/mmdb2.git

      - name: give build user perms
        run: chown -R build:build mmdb2

      - name: build in clean chroot
        run: su build -c "cd mmdb2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' mmdb2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: mmdb2-package
          path: mmdb2/*.pkg.tar.zst

  fftw2-float:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/fftw2-float.git

      - name: give build user perms
        run: chown -R build:build fftw2-float

      - name: build in clean chroot
        run: su build -c "cd fftw2-float && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' fftw2-float/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: fftw2-float-package
          path: fftw2-float/*.pkg.tar.zst

  libssm:
    runs-on: ubuntu-latest
    needs: [mmdb2, libccp4]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download mmdb2
        uses: actions/download-artifact@v4.1.8
        with:
          name: mmdb2-package

      - name: download libccp4
        uses: actions/download-artifact@v4.1.8
        with:
          name: libccp4-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/libssm.git

      - name: give build user perms
        run: chown -R build:build libssm

      - name: build in clean chroot
        run: su build -c "cd libssm && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libssm/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libssm-package
          path: libssm/*.pkg.tar.zst

  mmdb2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/mmdb2.git

      - name: give build user perms
        run: chown -R build:build mmdb2

      - name: build in clean chroot
        run: su build -c "cd mmdb2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' mmdb2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: mmdb2-package
          path: mmdb2/*.pkg.tar.zst

  libccp4:
    runs-on: ubuntu-latest
    needs: [mmdb2]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download mmdb2
        uses: actions/download-artifact@v4.1.8
        with:
          name: mmdb2-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/libccp4.git

      - name: give build user perms
        run: chown -R build:build libccp4

      - name: build in clean chroot
        run: su build -c "cd libccp4 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libccp4/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libccp4-package
          path: libccp4/*.pkg.tar.zst

  mmdb2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/mmdb2.git

      - name: give build user perms
        run: chown -R build:build mmdb2

      - name: build in clean chroot
        run: su build -c "cd mmdb2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' mmdb2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: mmdb2-package
          path: mmdb2/*.pkg.tar.zst

  mmdb2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/mmdb2.git

      - name: give build user perms
        run: chown -R build:build mmdb2

      - name: build in clean chroot
        run: su build -c "cd mmdb2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' mmdb2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: mmdb2-package
          path: mmdb2/*.pkg.tar.zst

  customizepkg-patching:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/customizepkg-patching.git

      - name: give build user perms
        run: chown -R build:build customizepkg-patching

      - name: build in clean chroot
        run: su build -c "cd customizepkg-patching && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' customizepkg-patching/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: customizepkg-patching-package
          path: customizepkg-patching/*.pkg.tar.zst

  kelbt:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/kelbt.git

      - name: give build user perms
        run: chown -R build:build kelbt

      - name: build in clean chroot
        run: su build -c "cd kelbt && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' kelbt/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: kelbt-package
          path: kelbt/*.pkg.tar.zst

  xf86-input-synaptics-gesturesonly:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/xf86-input-synaptics-gesturesonly.git

      - name: give build user perms
        run: chown -R build:build xf86-input-synaptics-gesturesonly

      - name: build in clean chroot
        run: su build -c "cd xf86-input-synaptics-gesturesonly && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' xf86-input-synaptics-gesturesonly/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: xf86-input-synaptics-gesturesonly-package
          path: xf86-input-synaptics-gesturesonly/*.pkg.tar.zst

  snd-hda-macbookpro-dkms-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/snd-hda-macbookpro-dkms-git.git

      - name: give build user perms
        run: chown -R build:build snd-hda-macbookpro-dkms-git

      - name: build in clean chroot
        run: su build -c "cd snd-hda-macbookpro-dkms-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' snd-hda-macbookpro-dkms-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: snd-hda-macbookpro-dkms-git-package
          path: snd-hda-macbookpro-dkms-git/*.pkg.tar.zst

  vdr-vdrmanager:
    runs-on: ubuntu-latest
    needs: [vdr]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download vdr
        uses: actions/download-artifact@v4.1.8
        with:
          name: vdr-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/vdr-vdrmanager.git

      - name: give build user perms
        run: chown -R build:build vdr-vdrmanager

      - name: build in clean chroot
        run: su build -c "cd vdr-vdrmanager && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' vdr-vdrmanager/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: vdr-vdrmanager-package
          path: vdr-vdrmanager/*.pkg.tar.zst

  vdr:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/vdr.git

      - name: give build user perms
        run: chown -R build:build vdr

      - name: build in clean chroot
        run: su build -c "cd vdr && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' vdr/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: vdr-package
          path: vdr/*.pkg.tar.zst

  libbass:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/libbass.git

      - name: give build user perms
        run: chown -R build:build libbass

      - name: build in clean chroot
        run: su build -c "cd libbass && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libbass/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libbass-package
          path: libbass/*.pkg.tar.zst

  android-platform-19:
    runs-on: ubuntu-latest
    needs: [android-sdk, android-sdk-platform-tools]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download android-sdk
        uses: actions/download-artifact@v4.1.8
        with:
          name: android-sdk-package

      - name: download android-sdk-platform-tools
        uses: actions/download-artifact@v4.1.8
        with:
          name: android-sdk-platform-tools-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/android-platform-19.git

      - name: give build user perms
        run: chown -R build:build android-platform-19

      - name: build in clean chroot
        run: su build -c "cd android-platform-19 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' android-platform-19/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: android-platform-19-package
          path: android-platform-19/*.pkg.tar.zst

  android-sdk:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/android-sdk.git

      - name: give build user perms
        run: chown -R build:build android-sdk

      - name: build in clean chroot
        run: su build -c "cd android-sdk && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' android-sdk/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: android-sdk-package
          path: android-sdk/*.pkg.tar.zst

  android-sdk-platform-tools:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/android-sdk-platform-tools.git

      - name: give build user perms
        run: chown -R build:build android-sdk-platform-tools

      - name: build in clean chroot
        run: su build -c "cd android-sdk-platform-tools && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' android-sdk-platform-tools/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: android-sdk-platform-tools-package
          path: android-sdk-platform-tools/*.pkg.tar.zst

  meteo:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/meteo.git

      - name: give build user perms
        run: chown -R build:build meteo

      - name: build in clean chroot
        run: su build -c "cd meteo && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' meteo/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: meteo-package
          path: meteo/*.pkg.tar.zst

  vegastrike-engine:
    runs-on: ubuntu-latest
    needs: [gcc12]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download gcc12
        uses: actions/download-artifact@v4.1.8
        with:
          name: gcc12-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/vegastrike-engine.git

      - name: give build user perms
        run: chown -R build:build vegastrike-engine

      - name: build in clean chroot
        run: su build -c "cd vegastrike-engine && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' vegastrike-engine/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: vegastrike-engine-package
          path: vegastrike-engine/*.pkg.tar.zst

  gcc12:
    runs-on: ubuntu-latest
    needs: [gcc12-libs]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download gcc12-libs
        uses: actions/download-artifact@v4.1.8
        with:
          name: gcc12-libs-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/gcc12.git

      - name: give build user perms
        run: chown -R build:build gcc12

      - name: build in clean chroot
        run: su build -c "cd gcc12 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' gcc12/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: gcc12-package
          path: gcc12/*.pkg.tar.zst

  gcc12-libs:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/gcc12-libs.git

      - name: give build user perms
        run: chown -R build:build gcc12-libs

      - name: build in clean chroot
        run: su build -c "cd gcc12-libs && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' gcc12-libs/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: gcc12-libs-package
          path: gcc12-libs/*.pkg.tar.zst

  woff2-misans-devanagari:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/woff2-misans-devanagari.git

      - name: give build user perms
        run: chown -R build:build woff2-misans-devanagari

      - name: build in clean chroot
        run: su build -c "cd woff2-misans-devanagari && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' woff2-misans-devanagari/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: woff2-misans-devanagari-package
          path: woff2-misans-devanagari/*.pkg.tar.zst

  crosswordpuzzle:
    runs-on: ubuntu-latest
    needs: [python2, pygtk]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download python2
        uses: actions/download-artifact@v4.1.8
        with:
          name: python2-package

      - name: download pygtk
        uses: actions/download-artifact@v4.1.8
        with:
          name: pygtk-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/crosswordpuzzle.git

      - name: give build user perms
        run: chown -R build:build crosswordpuzzle

      - name: build in clean chroot
        run: su build -c "cd crosswordpuzzle && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' crosswordpuzzle/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: crosswordpuzzle-package
          path: crosswordpuzzle/*.pkg.tar.zst

  python2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/python2.git

      - name: give build user perms
        run: chown -R build:build python2

      - name: build in clean chroot
        run: su build -c "cd python2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python2-package
          path: python2/*.pkg.tar.zst

  pygtk:
    runs-on: ubuntu-latest
    needs: [python2-cairo, python2-gobject2, python2-numpy, libglade]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download python2-cairo
        uses: actions/download-artifact@v4.1.8
        with:
          name: python2-cairo-package

      - name: download python2-gobject2
        uses: actions/download-artifact@v4.1.8
        with:
          name: python2-gobject2-package

      - name: download python2-numpy
        uses: actions/download-artifact@v4.1.8
        with:
          name: python2-numpy-package

      - name: download libglade
        uses: actions/download-artifact@v4.1.8
        with:
          name: libglade-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/pygtk.git

      - name: give build user perms
        run: chown -R build:build pygtk

      - name: build in clean chroot
        run: su build -c "cd pygtk && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' pygtk/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: pygtk-package
          path: pygtk/*.pkg.tar.zst

  python2-cairo:
    runs-on: ubuntu-latest
    needs: [python2]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download python2
        uses: actions/download-artifact@v4.1.8
        with:
          name: python2-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/python2-cairo.git

      - name: give build user perms
        run: chown -R build:build python2-cairo

      - name: build in clean chroot
        run: su build -c "cd python2-cairo && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python2-cairo/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python2-cairo-package
          path: python2-cairo/*.pkg.tar.zst

  python2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/python2.git

      - name: give build user perms
        run: chown -R build:build python2

      - name: build in clean chroot
        run: su build -c "cd python2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python2-package
          path: python2/*.pkg.tar.zst

  python2-gobject2:
    runs-on: ubuntu-latest
    needs: [python2]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download python2
        uses: actions/download-artifact@v4.1.8
        with:
          name: python2-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/python2-gobject2.git

      - name: give build user perms
        run: chown -R build:build python2-gobject2

      - name: build in clean chroot
        run: su build -c "cd python2-gobject2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python2-gobject2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python2-gobject2-package
          path: python2-gobject2/*.pkg.tar.zst

  python2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/python2.git

      - name: give build user perms
        run: chown -R build:build python2

      - name: build in clean chroot
        run: su build -c "cd python2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python2-package
          path: python2/*.pkg.tar.zst

  python2-numpy:
    runs-on: ubuntu-latest
    needs: [python2, python2-setuptools, cython2]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download python2
        uses: actions/download-artifact@v4.1.8
        with:
          name: python2-package

      - name: download python2-setuptools
        uses: actions/download-artifact@v4.1.8
        with:
          name: python2-setuptools-package

      - name: download cython2
        uses: actions/download-artifact@v4.1.8
        with:
          name: cython2-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/python2-numpy.git

      - name: give build user perms
        run: chown -R build:build python2-numpy

      - name: build in clean chroot
        run: su build -c "cd python2-numpy && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python2-numpy/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python2-numpy-package
          path: python2-numpy/*.pkg.tar.zst

  python2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/python2.git

      - name: give build user perms
        run: chown -R build:build python2

      - name: build in clean chroot
        run: su build -c "cd python2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python2-package
          path: python2/*.pkg.tar.zst

  python2-setuptools:
    runs-on: ubuntu-latest
    needs: [python2]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download python2
        uses: actions/download-artifact@v4.1.8
        with:
          name: python2-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/python2-setuptools.git

      - name: give build user perms
        run: chown -R build:build python2-setuptools

      - name: build in clean chroot
        run: su build -c "cd python2-setuptools && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python2-setuptools/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python2-setuptools-package
          path: python2-setuptools/*.pkg.tar.zst

  python2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/python2.git

      - name: give build user perms
        run: chown -R build:build python2

      - name: build in clean chroot
        run: su build -c "cd python2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python2-package
          path: python2/*.pkg.tar.zst

  cython2:
    runs-on: ubuntu-latest
    needs: [python2, python2-setuptools]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download python2
        uses: actions/download-artifact@v4.1.8
        with:
          name: python2-package

      - name: download python2-setuptools
        uses: actions/download-artifact@v4.1.8
        with:
          name: python2-setuptools-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/cython2.git

      - name: give build user perms
        run: chown -R build:build cython2

      - name: build in clean chroot
        run: su build -c "cd cython2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' cython2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: cython2-package
          path: cython2/*.pkg.tar.zst

  python2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/python2.git

      - name: give build user perms
        run: chown -R build:build python2

      - name: build in clean chroot
        run: su build -c "cd python2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python2-package
          path: python2/*.pkg.tar.zst

  python2-setuptools:
    runs-on: ubuntu-latest
    needs: [python2]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download python2
        uses: actions/download-artifact@v4.1.8
        with:
          name: python2-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/python2-setuptools.git

      - name: give build user perms
        run: chown -R build:build python2-setuptools

      - name: build in clean chroot
        run: su build -c "cd python2-setuptools && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python2-setuptools/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python2-setuptools-package
          path: python2-setuptools/*.pkg.tar.zst

  python2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/python2.git

      - name: give build user perms
        run: chown -R build:build python2

      - name: build in clean chroot
        run: su build -c "cd python2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python2-package
          path: python2/*.pkg.tar.zst

  libglade:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/libglade.git

      - name: give build user perms
        run: chown -R build:build libglade

      - name: build in clean chroot
        run: su build -c "cd libglade && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libglade/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libglade-package
          path: libglade/*.pkg.tar.zst

  en-croissant-bin:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/en-croissant-bin.git

      - name: give build user perms
        run: chown -R build:build en-croissant-bin

      - name: build in clean chroot
        run: su build -c "cd en-croissant-bin && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' en-croissant-bin/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: en-croissant-bin-package
          path: en-croissant-bin/*.pkg.tar.zst

  tmate-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/tmate-git.git

      - name: give build user perms
        run: chown -R build:build tmate-git

      - name: build in clean chroot
        run: su build -c "cd tmate-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' tmate-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: tmate-git-package
          path: tmate-git/*.pkg.tar.zst

  mint-backgrounds-tara:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/mint-backgrounds-tara.git

      - name: give build user perms
        run: chown -R build:build mint-backgrounds-tara

      - name: build in clean chroot
        run: su build -c "cd mint-backgrounds-tara && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' mint-backgrounds-tara/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: mint-backgrounds-tara-package
          path: mint-backgrounds-tara/*.pkg.tar.zst

  pzl_knotty:
    runs-on: ubuntu-latest
    needs: [pzl_common]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download pzl_common
        uses: actions/download-artifact@v4.1.8
        with:
          name: pzl_common-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/pzl_knotty.git

      - name: give build user perms
        run: chown -R build:build pzl_knotty

      - name: build in clean chroot
        run: su build -c "cd pzl_knotty && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' pzl_knotty/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: pzl_knotty-package
          path: pzl_knotty/*.pkg.tar.zst

  pzl_common:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/pzl_common.git

      - name: give build user perms
        run: chown -R build:build pzl_common

      - name: build in clean chroot
        run: su build -c "cd pzl_common && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' pzl_common/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: pzl_common-package
          path: pzl_common/*.pkg.tar.zst

  saleae-logic2:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/saleae-logic2.git

      - name: give build user perms
        run: chown -R build:build saleae-logic2

      - name: build in clean chroot
        run: su build -c "cd saleae-logic2 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' saleae-logic2/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: saleae-logic2-package
          path: saleae-logic2/*.pkg.tar.zst

  trufflehog:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/trufflehog.git

      - name: give build user perms
        run: chown -R build:build trufflehog

      - name: build in clean chroot
        run: su build -c "cd trufflehog && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' trufflehog/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: trufflehog-package
          path: trufflehog/*.pkg.tar.zst

  liana-bin:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/liana-bin.git

      - name: give build user perms
        run: chown -R build:build liana-bin

      - name: build in clean chroot
        run: su build -c "cd liana-bin && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' liana-bin/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: liana-bin-package
          path: liana-bin/*.pkg.tar.zst

  jaxodraw-latex:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/jaxodraw-latex.git

      - name: give build user perms
        run: chown -R build:build jaxodraw-latex

      - name: build in clean chroot
        run: su build -c "cd jaxodraw-latex && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' jaxodraw-latex/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: jaxodraw-latex-package
          path: jaxodraw-latex/*.pkg.tar.zst

  notop-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/notop-git.git

      - name: give build user perms
        run: chown -R build:build notop-git

      - name: build in clean chroot
        run: su build -c "cd notop-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' notop-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: notop-git-package
          path: notop-git/*.pkg.tar.zst

  python-pluginmgr:
    runs-on: ubuntu-latest
    needs: [python-munge]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download python-munge
        uses: actions/download-artifact@v4.1.8
        with:
          name: python-munge-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/python-pluginmgr.git

      - name: give build user perms
        run: chown -R build:build python-pluginmgr

      - name: build in clean chroot
        run: su build -c "cd python-pluginmgr && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python-pluginmgr/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python-pluginmgr-package
          path: python-pluginmgr/*.pkg.tar.zst

  python-munge:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/python-munge.git

      - name: give build user perms
        run: chown -R build:build python-munge

      - name: build in clean chroot
        run: su build -c "cd python-munge && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python-munge/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python-munge-package
          path: python-munge/*.pkg.tar.zst

  micropolis-java:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/micropolis-java.git

      - name: give build user perms
        run: chown -R build:build micropolis-java

      - name: build in clean chroot
        run: su build -c "cd micropolis-java && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' micropolis-java/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: micropolis-java-package
          path: micropolis-java/*.pkg.tar.zst

  libreoffice-dev-tr:
    runs-on: ubuntu-latest
    needs: [libreoffice-dev-bin]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download libreoffice-dev-bin
        uses: actions/download-artifact@v4.1.8
        with:
          name: libreoffice-dev-bin-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/libreoffice-dev-tr.git

      - name: give build user perms
        run: chown -R build:build libreoffice-dev-tr

      - name: build in clean chroot
        run: su build -c "cd libreoffice-dev-tr && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libreoffice-dev-tr/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libreoffice-dev-tr-package
          path: libreoffice-dev-tr/*.pkg.tar.zst

  libreoffice-dev-bin:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/libreoffice-dev-bin.git

      - name: give build user perms
        run: chown -R build:build libreoffice-dev-bin

      - name: build in clean chroot
        run: su build -c "cd libreoffice-dev-bin && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libreoffice-dev-bin/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libreoffice-dev-bin-package
          path: libreoffice-dev-bin/*.pkg.tar.zst

  gerbil-scheme-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/gerbil-scheme-git.git

      - name: give build user perms
        run: chown -R build:build gerbil-scheme-git

      - name: build in clean chroot
        run: su build -c "cd gerbil-scheme-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' gerbil-scheme-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: gerbil-scheme-git-package
          path: gerbil-scheme-git/*.pkg.tar.zst

  pianoteq-standard-trial-bin:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/pianoteq-standard-trial-bin.git

      - name: give build user perms
        run: chown -R build:build pianoteq-standard-trial-bin

      - name: build in clean chroot
        run: su build -c "cd pianoteq-standard-trial-bin && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' pianoteq-standard-trial-bin/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: pianoteq-standard-trial-bin-package
          path: pianoteq-standard-trial-bin/*.pkg.tar.zst

  envio-bin:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/envio-bin.git

      - name: give build user perms
        run: chown -R build:build envio-bin

      - name: build in clean chroot
        run: su build -c "cd envio-bin && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' envio-bin/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: envio-bin-package
          path: envio-bin/*.pkg.tar.zst

  pico-tts:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/pico-tts.git

      - name: give build user perms
        run: chown -R build:build pico-tts

      - name: build in clean chroot
        run: su build -c "cd pico-tts && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' pico-tts/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: pico-tts-package
          path: pico-tts/*.pkg.tar.zst

  eog-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/eog-git.git

      - name: give build user perms
        run: chown -R build:build eog-git

      - name: build in clean chroot
        run: su build -c "cd eog-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' eog-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: eog-git-package
          path: eog-git/*.pkg.tar.zst

  ttf-moralerspace:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/ttf-moralerspace.git

      - name: give build user perms
        run: chown -R build:build ttf-moralerspace

      - name: build in clean chroot
        run: su build -c "cd ttf-moralerspace && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' ttf-moralerspace/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ttf-moralerspace-package
          path: ttf-moralerspace/*.pkg.tar.zst

  mplcolors:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/mplcolors.git

      - name: give build user perms
        run: chown -R build:build mplcolors

      - name: build in clean chroot
        run: su build -c "cd mplcolors && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' mplcolors/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: mplcolors-package
          path: mplcolors/*.pkg.tar.zst

  pact-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/pact-git.git

      - name: give build user perms
        run: chown -R build:build pact-git

      - name: build in clean chroot
        run: su build -c "cd pact-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' pact-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: pact-git-package
          path: pact-git/*.pkg.tar.zst

  f30-backgrounds:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/f30-backgrounds.git

      - name: give build user perms
        run: chown -R build:build f30-backgrounds

      - name: build in clean chroot
        run: su build -c "cd f30-backgrounds && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' f30-backgrounds/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: f30-backgrounds-package
          path: f30-backgrounds/*.pkg.tar.zst

  see-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/see-git.git

      - name: give build user perms
        run: chown -R build:build see-git

      - name: build in clean chroot
        run: su build -c "cd see-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' see-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: see-git-package
          path: see-git/*.pkg.tar.zst

  leocad-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/leocad-git.git

      - name: give build user perms
        run: chown -R build:build leocad-git

      - name: build in clean chroot
        run: su build -c "cd leocad-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' leocad-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: leocad-git-package
          path: leocad-git/*.pkg.tar.zst

  python-openshift:
    runs-on: ubuntu-latest
    needs: [python-string-utils]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download python-string-utils
        uses: actions/download-artifact@v4.1.8
        with:
          name: python-string-utils-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/python-openshift.git

      - name: give build user perms
        run: chown -R build:build python-openshift

      - name: build in clean chroot
        run: su build -c "cd python-openshift && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python-openshift/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python-openshift-package
          path: python-openshift/*.pkg.tar.zst

  python-string-utils:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/python-string-utils.git

      - name: give build user perms
        run: chown -R build:build python-string-utils

      - name: build in clean chroot
        run: su build -c "cd python-string-utils && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python-string-utils/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python-string-utils-package
          path: python-string-utils/*.pkg.tar.zst

  gp-saml-gui-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/gp-saml-gui-git.git

      - name: give build user perms
        run: chown -R build:build gp-saml-gui-git

      - name: build in clean chroot
        run: su build -c "cd gp-saml-gui-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' gp-saml-gui-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: gp-saml-gui-git-package
          path: gp-saml-gui-git/*.pkg.tar.zst

  moonfltk:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/moonfltk.git

      - name: give build user perms
        run: chown -R build:build moonfltk

      - name: build in clean chroot
        run: su build -c "cd moonfltk && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' moonfltk/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: moonfltk-package
          path: moonfltk/*.pkg.tar.zst

  rofi-browser-bin:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/rofi-browser-bin.git

      - name: give build user perms
        run: chown -R build:build rofi-browser-bin

      - name: build in clean chroot
        run: su build -c "cd rofi-browser-bin && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' rofi-browser-bin/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: rofi-browser-bin-package
          path: rofi-browser-bin/*.pkg.tar.zst

  tcl-vfs:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/tcl-vfs.git

      - name: give build user perms
        run: chown -R build:build tcl-vfs

      - name: build in clean chroot
        run: su build -c "cd tcl-vfs && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' tcl-vfs/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: tcl-vfs-package
          path: tcl-vfs/*.pkg.tar.zst

  eq3_char_loop-dkms:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/eq3_char_loop-dkms.git

      - name: give build user perms
        run: chown -R build:build eq3_char_loop-dkms

      - name: build in clean chroot
        run: su build -c "cd eq3_char_loop-dkms && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' eq3_char_loop-dkms/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: eq3_char_loop-dkms-package
          path: eq3_char_loop-dkms/*.pkg.tar.zst

  chowtapemodel-bin:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/chowtapemodel-bin.git

      - name: give build user perms
        run: chown -R build:build chowtapemodel-bin

      - name: build in clean chroot
        run: su build -c "cd chowtapemodel-bin && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' chowtapemodel-bin/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: chowtapemodel-bin-package
          path: chowtapemodel-bin/*.pkg.tar.zst

  python-reparser:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/python-reparser.git

      - name: give build user perms
        run: chown -R build:build python-reparser

      - name: build in clean chroot
        run: su build -c "cd python-reparser && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' python-reparser/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: python-reparser-package
          path: python-reparser/*.pkg.tar.zst

  sysd-manager:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/sysd-manager.git

      - name: give build user perms
        run: chown -R build:build sysd-manager

      - name: build in clean chroot
        run: su build -c "cd sysd-manager && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' sysd-manager/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: sysd-manager-package
          path: sysd-manager/*.pkg.tar.zst

  libgbinder:
    runs-on: ubuntu-latest
    needs: [libglibutil]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download libglibutil
        uses: actions/download-artifact@v4.1.8
        with:
          name: libglibutil-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/libgbinder.git

      - name: give build user perms
        run: chown -R build:build libgbinder

      - name: build in clean chroot
        run: su build -c "cd libgbinder && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libgbinder/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libgbinder-package
          path: libgbinder/*.pkg.tar.zst

  libglibutil:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/libglibutil.git

      - name: give build user perms
        run: chown -R build:build libglibutil

      - name: build in clean chroot
        run: su build -c "cd libglibutil && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libglibutil/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libglibutil-package
          path: libglibutil/*.pkg.tar.zst

  lib32-blas:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/lib32-blas.git

      - name: give build user perms
        run: chown -R build:build lib32-blas

      - name: build in clean chroot
        run: su build -c "cd lib32-blas && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' lib32-blas/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: lib32-blas-package
          path: lib32-blas/*.pkg.tar.zst

  libtgbot-cpp-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/libtgbot-cpp-git.git

      - name: give build user perms
        run: chown -R build:build libtgbot-cpp-git

      - name: build in clean chroot
        run: su build -c "cd libtgbot-cpp-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libtgbot-cpp-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libtgbot-cpp-git-package
          path: libtgbot-cpp-git/*.pkg.tar.zst

  php81-pecl:
    runs-on: ubuntu-latest
    needs: [php81-pear, c-client]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download php81-pear
        uses: actions/download-artifact@v4.1.8
        with:
          name: php81-pear-package

      - name: download c-client
        uses: actions/download-artifact@v4.1.8
        with:
          name: c-client-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/php81-pecl.git

      - name: give build user perms
        run: chown -R build:build php81-pecl

      - name: build in clean chroot
        run: su build -c "cd php81-pecl && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' php81-pecl/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: php81-pecl-package
          path: php81-pecl/*.pkg.tar.zst

  php81-pear:
    runs-on: ubuntu-latest
    needs: [php81, php81-xml, php81-cli, php81-phar, c-client]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download php81
        uses: actions/download-artifact@v4.1.8
        with:
          name: php81-package

      - name: download php81-xml
        uses: actions/download-artifact@v4.1.8
        with:
          name: php81-xml-package

      - name: download php81-cli
        uses: actions/download-artifact@v4.1.8
        with:
          name: php81-cli-package

      - name: download php81-phar
        uses: actions/download-artifact@v4.1.8
        with:
          name: php81-phar-package

      - name: download c-client
        uses: actions/download-artifact@v4.1.8
        with:
          name: c-client-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/php81-pear.git

      - name: give build user perms
        run: chown -R build:build php81-pear

      - name: build in clean chroot
        run: su build -c "cd php81-pear && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' php81-pear/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: php81-pear-package
          path: php81-pear/*.pkg.tar.zst

  php81:
    runs-on: ubuntu-latest
    needs: [c-client]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download c-client
        uses: actions/download-artifact@v4.1.8
        with:
          name: c-client-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/php81.git

      - name: give build user perms
        run: chown -R build:build php81

      - name: build in clean chroot
        run: su build -c "cd php81 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' php81/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: php81-package
          path: php81/*.pkg.tar.zst

  c-client:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/c-client.git

      - name: give build user perms
        run: chown -R build:build c-client

      - name: build in clean chroot
        run: su build -c "cd c-client && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' c-client/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: c-client-package
          path: c-client/*.pkg.tar.zst

  php81-xml:
    runs-on: ubuntu-latest
    needs: [php81, c-client]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download php81
        uses: actions/download-artifact@v4.1.8
        with:
          name: php81-package

      - name: download c-client
        uses: actions/download-artifact@v4.1.8
        with:
          name: c-client-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/php81-xml.git

      - name: give build user perms
        run: chown -R build:build php81-xml

      - name: build in clean chroot
        run: su build -c "cd php81-xml && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' php81-xml/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: php81-xml-package
          path: php81-xml/*.pkg.tar.zst

  php81:
    runs-on: ubuntu-latest
    needs: [c-client]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download c-client
        uses: actions/download-artifact@v4.1.8
        with:
          name: c-client-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/php81.git

      - name: give build user perms
        run: chown -R build:build php81

      - name: build in clean chroot
        run: su build -c "cd php81 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' php81/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: php81-package
          path: php81/*.pkg.tar.zst

  c-client:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/c-client.git

      - name: give build user perms
        run: chown -R build:build c-client

      - name: build in clean chroot
        run: su build -c "cd c-client && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' c-client/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: c-client-package
          path: c-client/*.pkg.tar.zst

  c-client:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/c-client.git

      - name: give build user perms
        run: chown -R build:build c-client

      - name: build in clean chroot
        run: su build -c "cd c-client && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' c-client/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: c-client-package
          path: c-client/*.pkg.tar.zst

  php81-cli:
    runs-on: ubuntu-latest
    needs: [php81, c-client]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download php81
        uses: actions/download-artifact@v4.1.8
        with:
          name: php81-package

      - name: download c-client
        uses: actions/download-artifact@v4.1.8
        with:
          name: c-client-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/php81-cli.git

      - name: give build user perms
        run: chown -R build:build php81-cli

      - name: build in clean chroot
        run: su build -c "cd php81-cli && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' php81-cli/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: php81-cli-package
          path: php81-cli/*.pkg.tar.zst

  php81:
    runs-on: ubuntu-latest
    needs: [c-client]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download c-client
        uses: actions/download-artifact@v4.1.8
        with:
          name: c-client-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/php81.git

      - name: give build user perms
        run: chown -R build:build php81

      - name: build in clean chroot
        run: su build -c "cd php81 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' php81/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: php81-package
          path: php81/*.pkg.tar.zst

  c-client:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/c-client.git

      - name: give build user perms
        run: chown -R build:build c-client

      - name: build in clean chroot
        run: su build -c "cd c-client && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' c-client/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: c-client-package
          path: c-client/*.pkg.tar.zst

  c-client:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/c-client.git

      - name: give build user perms
        run: chown -R build:build c-client

      - name: build in clean chroot
        run: su build -c "cd c-client && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' c-client/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: c-client-package
          path: c-client/*.pkg.tar.zst

  php81-phar:
    runs-on: ubuntu-latest
    needs: [php81, c-client]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download php81
        uses: actions/download-artifact@v4.1.8
        with:
          name: php81-package

      - name: download c-client
        uses: actions/download-artifact@v4.1.8
        with:
          name: c-client-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/php81-phar.git

      - name: give build user perms
        run: chown -R build:build php81-phar

      - name: build in clean chroot
        run: su build -c "cd php81-phar && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' php81-phar/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: php81-phar-package
          path: php81-phar/*.pkg.tar.zst

  php81:
    runs-on: ubuntu-latest
    needs: [c-client]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download c-client
        uses: actions/download-artifact@v4.1.8
        with:
          name: c-client-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/php81.git

      - name: give build user perms
        run: chown -R build:build php81

      - name: build in clean chroot
        run: su build -c "cd php81 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' php81/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: php81-package
          path: php81/*.pkg.tar.zst

  c-client:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/c-client.git

      - name: give build user perms
        run: chown -R build:build c-client

      - name: build in clean chroot
        run: su build -c "cd c-client && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' c-client/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: c-client-package
          path: c-client/*.pkg.tar.zst

  c-client:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/c-client.git

      - name: give build user perms
        run: chown -R build:build c-client

      - name: build in clean chroot
        run: su build -c "cd c-client && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' c-client/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: c-client-package
          path: c-client/*.pkg.tar.zst

  c-client:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/c-client.git

      - name: give build user perms
        run: chown -R build:build c-client

      - name: build in clean chroot
        run: su build -c "cd c-client && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' c-client/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: c-client-package
          path: c-client/*.pkg.tar.zst

  c-client:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/c-client.git

      - name: give build user perms
        run: chown -R build:build c-client

      - name: build in clean chroot
        run: su build -c "cd c-client && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' c-client/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: c-client-package
          path: c-client/*.pkg.tar.zst

  firefox-extension-amber-bridge:
    runs-on: ubuntu-latest
    needs: [amber-bridge]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download amber-bridge
        uses: actions/download-artifact@v4.1.8
        with:
          name: amber-bridge-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/firefox-extension-amber-bridge.git

      - name: give build user perms
        run: chown -R build:build firefox-extension-amber-bridge

      - name: build in clean chroot
        run: su build -c "cd firefox-extension-amber-bridge && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' firefox-extension-amber-bridge/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: firefox-extension-amber-bridge-package
          path: firefox-extension-amber-bridge/*.pkg.tar.zst

  amber-bridge:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/amber-bridge.git

      - name: give build user perms
        run: chown -R build:build amber-bridge

      - name: build in clean chroot
        run: su build -c "cd amber-bridge && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' amber-bridge/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: amber-bridge-package
          path: amber-bridge/*.pkg.tar.zst

  libretro-pcsx-rearmed-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/libretro-pcsx-rearmed-git.git

      - name: give build user perms
        run: chown -R build:build libretro-pcsx-rearmed-git

      - name: build in clean chroot
        run: su build -c "cd libretro-pcsx-rearmed-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libretro-pcsx-rearmed-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libretro-pcsx-rearmed-git-package
          path: libretro-pcsx-rearmed-git/*.pkg.tar.zst

  greetd-artix-dinit:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/greetd-artix-dinit.git

      - name: give build user perms
        run: chown -R build:build greetd-artix-dinit

      - name: build in clean chroot
        run: su build -c "cd greetd-artix-dinit && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' greetd-artix-dinit/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: greetd-artix-dinit-package
          path: greetd-artix-dinit/*.pkg.tar.zst

  gowords:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/gowords.git

      - name: give build user perms
        run: chown -R build:build gowords

      - name: build in clean chroot
        run: su build -c "cd gowords && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' gowords/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: gowords-package
          path: gowords/*.pkg.tar.zst

  ruby-id3tag:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/ruby-id3tag.git

      - name: give build user perms
        run: chown -R build:build ruby-id3tag

      - name: build in clean chroot
        run: su build -c "cd ruby-id3tag && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' ruby-id3tag/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ruby-id3tag-package
          path: ruby-id3tag/*.pkg.tar.zst

  plymouth-theme-gdm-arch:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/plymouth-theme-gdm-arch.git

      - name: give build user perms
        run: chown -R build:build plymouth-theme-gdm-arch

      - name: build in clean chroot
        run: su build -c "cd plymouth-theme-gdm-arch && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' plymouth-theme-gdm-arch/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: plymouth-theme-gdm-arch-package
          path: plymouth-theme-gdm-arch/*.pkg.tar.zst

  partfs-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/partfs-git.git

      - name: give build user perms
        run: chown -R build:build partfs-git

      - name: build in clean chroot
        run: su build -c "cd partfs-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' partfs-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: partfs-git-package
          path: partfs-git/*.pkg.tar.zst

  quarry:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/quarry.git

      - name: give build user perms
        run: chown -R build:build quarry

      - name: build in clean chroot
        run: su build -c "cd quarry && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' quarry/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: quarry-package
          path: quarry/*.pkg.tar.zst

  jdupes-git:
    runs-on: ubuntu-latest
    needs: [libjodycode-git]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download libjodycode-git
        uses: actions/download-artifact@v4.1.8
        with:
          name: libjodycode-git-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/jdupes-git.git

      - name: give build user perms
        run: chown -R build:build jdupes-git

      - name: build in clean chroot
        run: su build -c "cd jdupes-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' jdupes-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: jdupes-git-package
          path: jdupes-git/*.pkg.tar.zst

  libjodycode-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/libjodycode-git.git

      - name: give build user perms
        run: chown -R build:build libjodycode-git

      - name: build in clean chroot
        run: su build -c "cd libjodycode-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libjodycode-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libjodycode-git-package
          path: libjodycode-git/*.pkg.tar.zst

  swappy-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/swappy-git.git

      - name: give build user perms
        run: chown -R build:build swappy-git

      - name: build in clean chroot
        run: su build -c "cd swappy-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' swappy-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: swappy-git-package
          path: swappy-git/*.pkg.tar.zst

  simpleini:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/simpleini.git

      - name: give build user perms
        run: chown -R build:build simpleini

      - name: build in clean chroot
        run: su build -c "cd simpleini && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' simpleini/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: simpleini-package
          path: simpleini/*.pkg.tar.zst

  minify:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/minify.git

      - name: give build user perms
        run: chown -R build:build minify

      - name: build in clean chroot
        run: su build -c "cd minify && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' minify/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: minify-package
          path: minify/*.pkg.tar.zst

  windscribe-v2-bin:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/windscribe-v2-bin.git

      - name: give build user perms
        run: chown -R build:build windscribe-v2-bin

      - name: build in clean chroot
        run: su build -c "cd windscribe-v2-bin && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' windscribe-v2-bin/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: windscribe-v2-bin-package
          path: windscribe-v2-bin/*.pkg.tar.zst

  ruby-benchmark_suite:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/ruby-benchmark_suite.git

      - name: give build user perms
        run: chown -R build:build ruby-benchmark_suite

      - name: build in clean chroot
        run: su build -c "cd ruby-benchmark_suite && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' ruby-benchmark_suite/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ruby-benchmark_suite-package
          path: ruby-benchmark_suite/*.pkg.tar.zst

  opencorsairlink-testing:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/opencorsairlink-testing.git

      - name: give build user perms
        run: chown -R build:build opencorsairlink-testing

      - name: build in clean chroot
        run: su build -c "cd opencorsairlink-testing && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' opencorsairlink-testing/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: opencorsairlink-testing-package
          path: opencorsairlink-testing/*.pkg.tar.zst

  goscrobble:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/goscrobble.git

      - name: give build user perms
        run: chown -R build:build goscrobble

      - name: build in clean chroot
        run: su build -c "cd goscrobble && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' goscrobble/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: goscrobble-package
          path: goscrobble/*.pkg.tar.zst

  libscfg-git:
    runs-on: ubuntu-latest
    needs: [gyosu-git]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download gyosu-git
        uses: actions/download-artifact@v4.1.8
        with:
          name: gyosu-git-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/libscfg-git.git

      - name: give build user perms
        run: chown -R build:build libscfg-git

      - name: build in clean chroot
        run: su build -c "cd libscfg-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libscfg-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libscfg-git-package
          path: libscfg-git/*.pkg.tar.zst

  gyosu-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/gyosu-git.git

      - name: give build user perms
        run: chown -R build:build gyosu-git

      - name: build in clean chroot
        run: su build -c "cd gyosu-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' gyosu-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: gyosu-git-package
          path: gyosu-git/*.pkg.tar.zst

  reminduck:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/reminduck.git

      - name: give build user perms
        run: chown -R build:build reminduck

      - name: build in clean chroot
        run: su build -c "cd reminduck && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' reminduck/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: reminduck-package
          path: reminduck/*.pkg.tar.zst

  r-tree:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/r-tree.git

      - name: give build user perms
        run: chown -R build:build r-tree

      - name: build in clean chroot
        run: su build -c "cd r-tree && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' r-tree/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: r-tree-package
          path: r-tree/*.pkg.tar.zst

  cups-xerox:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/cups-xerox.git

      - name: give build user perms
        run: chown -R build:build cups-xerox

      - name: build in clean chroot
        run: su build -c "cd cups-xerox && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' cups-xerox/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: cups-xerox-package
          path: cups-xerox/*.pkg.tar.zst

  fortran-fpm-bin:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/fortran-fpm-bin.git

      - name: give build user perms
        run: chown -R build:build fortran-fpm-bin

      - name: build in clean chroot
        run: su build -c "cd fortran-fpm-bin && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' fortran-fpm-bin/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: fortran-fpm-bin-package
          path: fortran-fpm-bin/*.pkg.tar.zst

  gp2c:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/gp2c.git

      - name: give build user perms
        run: chown -R build:build gp2c

      - name: build in clean chroot
        run: su build -c "cd gp2c && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' gp2c/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: gp2c-package
          path: gp2c/*.pkg.tar.zst

  deadbeef-plugin-spectrogram-gtk3-git:
    runs-on: ubuntu-latest
    needs: [deadbeef, deadbeef]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download deadbeef
        uses: actions/download-artifact@v4.1.8
        with:
          name: deadbeef-package

      - name: download deadbeef
        uses: actions/download-artifact@v4.1.8
        with:
          name: deadbeef-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/deadbeef-plugin-spectrogram-gtk3-git.git

      - name: give build user perms
        run: chown -R build:build deadbeef-plugin-spectrogram-gtk3-git

      - name: build in clean chroot
        run: su build -c "cd deadbeef-plugin-spectrogram-gtk3-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' deadbeef-plugin-spectrogram-gtk3-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: deadbeef-plugin-spectrogram-gtk3-git-package
          path: deadbeef-plugin-spectrogram-gtk3-git/*.pkg.tar.zst

  deadbeef:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/deadbeef.git

      - name: give build user perms
        run: chown -R build:build deadbeef

      - name: build in clean chroot
        run: su build -c "cd deadbeef && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' deadbeef/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: deadbeef-package
          path: deadbeef/*.pkg.tar.zst

  deadbeef:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/deadbeef.git

      - name: give build user perms
        run: chown -R build:build deadbeef

      - name: build in clean chroot
        run: su build -c "cd deadbeef && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' deadbeef/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: deadbeef-package
          path: deadbeef/*.pkg.tar.zst

  fhs-manpages:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/fhs-manpages.git

      - name: give build user perms
        run: chown -R build:build fhs-manpages

      - name: build in clean chroot
        run: su build -c "cd fhs-manpages && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' fhs-manpages/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: fhs-manpages-package
          path: fhs-manpages/*.pkg.tar.zst

  swaymonad-git:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/swaymonad-git.git

      - name: give build user perms
        run: chown -R build:build swaymonad-git

      - name: build in clean chroot
        run: su build -c "cd swaymonad-git && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' swaymonad-git/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: swaymonad-git-package
          path: swaymonad-git/*.pkg.tar.zst

  libmysqlclient55:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/libmysqlclient55.git

      - name: give build user perms
        run: chown -R build:build libmysqlclient55

      - name: build in clean chroot
        run: su build -c "cd libmysqlclient55 && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' libmysqlclient55/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: libmysqlclient55-package
          path: libmysqlclient55/*.pkg.tar.zst

  wasm-micro-runtime:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/wasm-micro-runtime.git

      - name: give build user perms
        run: chown -R build:build wasm-micro-runtime

      - name: build in clean chroot
        run: su build -c "cd wasm-micro-runtime && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' wasm-micro-runtime/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: wasm-micro-runtime-package
          path: wasm-micro-runtime/*.pkg.tar.zst

  cockpit-zfs-manager:
    runs-on: ubuntu-latest
    needs: [zfs-dkms]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download zfs-dkms
        uses: actions/download-artifact@v4.1.8
        with:
          name: zfs-dkms-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/cockpit-zfs-manager.git

      - name: give build user perms
        run: chown -R build:build cockpit-zfs-manager

      - name: build in clean chroot
        run: su build -c "cd cockpit-zfs-manager && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' cockpit-zfs-manager/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: cockpit-zfs-manager-package
          path: cockpit-zfs-manager/*.pkg.tar.zst

  zfs-dkms:
    runs-on: ubuntu-latest
    needs: [zfs-utils]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download zfs-utils
        uses: actions/download-artifact@v4.1.8
        with:
          name: zfs-utils-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/zfs-dkms.git

      - name: give build user perms
        run: chown -R build:build zfs-dkms

      - name: build in clean chroot
        run: su build -c "cd zfs-dkms && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' zfs-dkms/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: zfs-dkms-package
          path: zfs-dkms/*.pkg.tar.zst

  zfs-utils:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/zfs-utils.git

      - name: give build user perms
        run: chown -R build:build zfs-utils

      - name: build in clean chroot
        run: su build -c "cd zfs-utils && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' zfs-utils/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: zfs-utils-package
          path: zfs-utils/*.pkg.tar.zst

  texlive-alteswab:
    runs-on: ubuntu-latest
    needs: [texlive-frakturx]
    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build

      - name: download texlive-frakturx
        uses: actions/download-artifact@v4.1.8
        with:
          name: texlive-frakturx-package

      - name: install dependencies
        run: pacman -U --noconfirm *.pkg.tar.zst

      - name: download package
        run: git clone https://aur.archlinux.org/texlive-alteswab.git

      - name: give build user perms
        run: chown -R build:build texlive-alteswab

      - name: build in clean chroot
        run: su build -c "cd texlive-alteswab && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' texlive-alteswab/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: texlive-alteswab-package
          path: texlive-alteswab/*.pkg.tar.zst

  texlive-frakturx:
    runs-on: ubuntu-latest

    container:
      image: archlinux
      options: --privileged

    steps:
      - name: update pacman
        run: pacman -Syu --noconfirm

      - name: install git
        run: pacman -S git base-devel devtools --noconfirm

      - name: add build user
        run: useradd -m build

      - name: give build unlimited power
        run: |
          echo "build ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers.d/build


      - name: download package
        run: git clone https://aur.archlinux.org/texlive-frakturx.git

      - name: give build user perms
        run: chown -R build:build texlive-frakturx

      - name: build in clean chroot
        run: su build -c "cd texlive-frakturx && makepkg -s --noconfirm --skippgpcheck"

      - name: remove semicolons
        run: rename ':' '-' texlive-frakturx/*.tar.zst || [ $? -eq 4 ]

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: texlive-frakturx-package
          path: texlive-frakturx/*.pkg.tar.zst
